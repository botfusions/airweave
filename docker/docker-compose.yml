# docker-compose.yml
# Coolify deployment - Supabase network entegreli

services:
  redis:
    container_name: airweave-redis
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
    networks:
      - default

  backend:
    container_name: airweave-backend
    image: ${BACKEND_IMAGE:-ghcr.io/airweave-ai/airweave-backend:latest}
    ports:
      - "8001:8001"
    environment:
      # Supabase PostgreSQL - Hostname kullanÄ±yoruz
      - POSTGRES_HOST=supabase-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=supabase_admin
      - POSTGRES_PASSWORD=PZQEkh2IrpL2CIo00gyuOzqdqnEwMT5I
      - POSTGRES_DB=postgres
      - DATABASE_URL=postgresql://supabase_admin:PZQEkh2IrpL2CIo00gyuOzqdqnEwMT5I@supabase-db:5432/postgres
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
      # Qdrant - Mevcut Qdrant
      - QDRANT_HOST=qdrant-ik4c0s48cwco4occo4kw8okg
      - QDRANT_PORT=6333
      - QDRANT_URL=http://qdrant-ik4c0s48cwco4occo4kw8okg:6333
      
      # Text2Vec
      - TEXT2VEC_INFERENCE_URL=http://text2vec-transformers:8080
      
      # Environment
      - ENVIRONMENT=production
      - LOCAL_DEVELOPMENT=false
      - TEMPORAL_ENABLED=false
      - AUTH_ENABLED=false
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/health" ]
      interval: 10s
      timeout: 30s
      retries: 10
      start_period: 60s
    restart: on-failure
    networks:
      - default
      - supabase_network

  frontend:
    container_name: airweave-frontend
    image: ${FRONTEND_IMAGE:-ghcr.io/airweave-ai/airweave-frontend:latest}
    ports:
      - "8082:8080"
    environment:
      - API_URL=http://localhost:8001
      - ENABLE_AUTH=false
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure
    networks:
      - default

  text2vec-transformers:
    container_name: airweave-embeddings
    image: semitechnologies/transformers-inference:sentence-transformers-all-MiniLM-L6-v2
    ports:
      - "9879:8080"
    environment:
      ENABLE_CUDA: 0
      WORKERS_PER_NODE: 1
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure
    networks:
      - default

networks:
  supabase_network:
    external: true
    name: d0cso0goco0swwcgc4gkgw8c

volumes:
  redis_data:
